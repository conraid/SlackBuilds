#!/bin/bash
#
# Slackware build script for lighttpd
#
# Copyright 2019-2025 Corrado Franco (https://corradofranco.it)
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program
# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License along
# with this program (most likely, a file named COPYING).  If not, see
# <http://www.gnu.org/licenses/>.
#
# Latest version of this SlackBuild at https://github.com/conraid/SlackBuilds

# Thanks to Matteo Bernardini for https://slackbuilds.org/reposilighttpdy/14.2/network/lighttpd/

# IMPORTANT
#
#  You must have a lighttpd user and lighttpd group to run this script
#  (uid=208 and gid=208 are SBo suggest)
#
#  # groupadd -g 208 lighttpd
#  # useradd -u 208 -g lighttpd -d /var/www lighttpd
#
if ! grep -q "^lighttpd:" /etc/passwd; then
  echo "You must have a lighttpd user"
  exit 1
elif ! grep -q "^lighttpd:" /etc/group; then
  echo "You must have a lighttpd group"
  exit 1
fi


set -euo pipefail

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=lighttpd
VERSION=1.4.80
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

DOCFILES="AUTHORS COPYING INSTALL NEWS README* doc/*.txt doc/*.css doc/scripts"

if [ -z ${ARCH:=""} ]; then
  case "$( uname -m )" in
    i?86) ARCH=i686 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME:-""}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz "
  exit 0
fi

if [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=pentium4 -mtune=generic"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -march=x86-64 -mtune=generic -fPIC -pipe -fomit-frame-pointer"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PKGNAM-$VERSION
tar xvf $CWD/$PKGNAM-$VERSION.tar.xz
cd $PKGNAM-$VERSION

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \+ -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \+

# Apply patches
if [ -e $CWD/patches ]; then
  for PATCH in $CWD/patches/*.patch; do
    patch -p1 -i $PATCH
  done
fi

export CFLAGS="$SLKCFLAGS"
export CXXFLAGS="$SLKCFLAGS"
mkdir meson-build
cd meson-build
meson setup \
  --prefix          /usr \
  --libdir          lib${LIBDIRSUFFIX} \
  --libexecdir      /usr/libexec \
  --sysconfdir      /etc \
  --localstatedir   /var \
  --mandir          /usr/man \
  --infodir         /usr/info \
  --bindir          /usr/bin \
  --sbindir         /usr/sbin \
  --includedir      /usr/include \
  --datadir         /usr/share \
  --buildtype       release \
  --default-library shared \
  --buildtype       plain \
  --auto-features   enabled \
  --wrap-mode       nodownload \
  -D                b_lto=true \
  -D                b_pie=true \
  -D                with_brotli=enabled \
  -D                with_bzip=enabled \
  -D                with_krb5=enabled \
  -D                with_ldap=enabled \
	-D                with_lua=true \
	-D                with_maxminddb=enabled \
	-D                with_mysql=enabled \
	-D                with_openssl=true \
	-D                with_webdav_props=enabled \
	-D                with_webdav_locks=enabled \
  -D                with_nettle=false \
  -D                with_pcre=pcre2 \
  -D                with_xattr=true \
  ..

ninja
DESTDIR=$PKG ninja install
cd ..

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find $PKG | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip -g 2> /dev/null || true

if [ -d $PKG/usr/man ]; then
  find $PKG/usr/man -type f -exec chmod 644 {} \; -exec gzip -9 {} \;
  for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

install -d -m700 -g lighttpd -o lighttpd $PKG/var/cache/$PKGNAM
install -d -m700 -g lighttpd -o lighttpd $PKG/var/log/$PKGNAM
touch $PKG/var/log/lighttpd/{access,error}.log.new
chown lighttpd:lighttpd $PKG/var/log/lighttpd/ -R

install -Dm755 $CWD/files/rc.$PKGNAM $PKG/etc/rc.d/rc.$PKGNAM.new
install -Dm644 $CWD/files/$PKGNAM.logrotate $PKG/etc/logrotate.d/lighttpd.new
install -Dm644 $CWD/files/$PKGNAM.conf $PKG/etc/$PKGNAM/$PKGNAM.conf.new
install -Dm644 doc/config/modules.conf $PKG/etc/$PKGNAM/modules.conf.new
install -Dm644 doc/config/vhosts.d/vhosts.template $PKG/etc/$PKGNAM/vhosts.d/vhosts.conf.new

mkdir -p $PKG/etc/$PKGNAM/conf.d
cp doc/config/conf.d/*.conf $PKG/etc/$PKGNAM/conf.d/
rename .conf .conf.new $PKG/etc/$PKGNAM/conf.d/*.conf

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a $DOCFILES $PKG/usr/doc/$PKGNAM-$VERSION || true
cat $CWD/$PKGNAM.SlackBuild > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
