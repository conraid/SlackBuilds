#!/bin/bash
#
# Slackware build script for <prgname> (http://www.privoxy.org/)
#
# Copyright (c) 2007  alkos333 <me@alkos333.net>
# Copyright 2009-2023 Corrado Franco (https://corradofranco.it)
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program
# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License along
# with this program (most likely, a file named COPYING).  If not, see
# <http://www.gnu.org/licenses/>.

set -eu

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=privoxy
VERSION=3.0.34
BUILD=${BUILD:-2}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

## privoxy user & group *MUST* exist before package creation
# See http://slackbuilds.org/uid_gid.txt for current recomendations.
if ! grep -q "^privoxy:" /etc/group 2>/dev/null ; then
  echo "  Error: PRIVOXY group (privoxy) doesn't exist."
  echo "  Try creating one with: groupadd -g 206 privoxy"
  exit 1
fi
if ! grep -q "^privoxy:" /etc/passwd 2>/dev/null ; then
  echo "  Error: PRIVOXY user (privoxy) doesn't exist."
  echo "  Try creating one with: useradd -u 206 -g privoxy -d /dev/null -s /bin/false privoxy"
  exit 1
fi

if [ -z ${ARCH:=""} ]; then
  case "$( uname -m )" in
    i?86) ARCH=i686 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME:-""}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-${BUILD}${TAG}.txz"
  exit 0
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PKGNAM-$VERSION-stable
tar xvf $CWD/privoxy-$VERSION-stable-src.tar.gz
cd $PKGNAM-$VERSION-stable

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Put the docs where we tell them to go.
sed '/^DOC_DEST/s/= .*/= @docdir@/' -i GNUmakefile.in

# The Makefile checks if certain config files exist, and if so, adds a
# .new suffix.  Turn this behavior off.  We will do it below.
# Thanks to SBo
sed 's|\[ -s "\$(CONF_DEST)/\$\$i" \]|false|' -i GNUmakefile.in

autoreconf
LDFLAGS="-L/usr/lib${LIBDIRSUFFIX}" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc/privoxy \
  --localstatedir=/var \
  --mandir=/usr/man \
  --infodir=/usr/info \
  --docdir=/usr/doc/$PKGNAM-$VERSION \
  --with-docbook=no \
  --enable-no-gifs \
  --enable-compression \
  --with-user=privoxy \
  --with-group=privoxy \
  --enable-graceful-termination \
  --host=$ARCH-slackware-linux \
  --build=$ARCH-slackware-linux

make
make DESTDIR=$PKG install-strip

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

# Install init script
install -Dm755 slackware/rc.privoxy $PKG/etc/rc.d/rc.privoxy.new

# Use #!/bin/bash for init scripts
sed 's;#!/bin/sh;#!/bin/bash;g' -i $PKG/etc/rc.d/*.new

# Make .new files so we don't clobber the existing configuration.
# Thanks to SBo
for NEW in config match-all.action trust user.action user.filter; do
  mv $PKG/etc/privoxy/$NEW $PKG/etc/privoxy/$NEW.new
done

# Don't clobber the logfile either
mv $PKG/var/log/privoxy/logfile $PKG/var/log/privoxy/logfile.new

# Remove this directory since it's empty and part of Slackware base
rmdir $PKG/var/run $PKG/usr/share/

if [ -d $PKG/usr/man ]; then
  find $PKG/usr/man -type f -exec chmod 644 {} \; -exec gzip -9 {} \;
  for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cat $CWD/$PKGNAM.SlackBuild > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild

# Add template for TOR
cat $CWD/files/config.tor.template > $PKG/usr/doc/$PKGNAM-$VERSION/config.tor.template

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
if [ -e $CWD/slack-required ]; then
  cat $CWD/slack-required > $PKG/install/slack-required
fi
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

