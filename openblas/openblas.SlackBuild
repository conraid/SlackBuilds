#!/bin/bash
#
# Slackware build script for openblas
#
# Copyright 2020-2023 Corrado Franco (https://corradofranco.it)
# All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version, with the following exception:
# the text of the GPL license may be omitted.

# This program is distributed in the hope that it will be useful, but
# without any warranty; without even the implied warranty of
# merchantability or fitness for a particular purpose. Compiling,
# interpreting, executing or merely reading the text of the program
# may result in lapses of consciousness and/or very being, up to and
# including the end of all existence and the Universe as we know it.
# See the GNU General Public License for more details.

# You may have received a copy of the GNU General Public License along
# with this program (most likely, a file named COPYING).  If not, see
# <http://www.gnu.org/licenses/>.
#
# Latest version of this SlackBuild at https://github.com/conraid/SlackBuilds

set -eu
cd $(dirname $0) ; CWD=$(pwd)

PRGNAM=OpenBLAS
PKGNAM=$(echo $PRGNAM | tr A-Z a-z)
VERSION=0.3.23
BUILD=${BUILD:-1}
TAG=${TAG:-cf}
TMP=${TMP:-/tmp/pkg}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

DOCFILES="*.txt *.md LICENSE"

if [ -z ${ARCH:=""} ]; then
  case "$( uname -m )" in
    i?86) ARCH=i686 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME:-""}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD.txz "
  exit 0
fi

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC -pipe -fomit-frame-pointer"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.gz || tar xvf $CWD/v$VERSION.tar.gz
cd $PRGNAM-$VERSION

chown -R root:root .
find . \
  \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
  -exec chmod 755 {} \+ -o \
  \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
  -exec chmod 644 {} \+

# Apply patches
if [ -e $CWD/patches/ ]; then
  if [ -e $CWD/patches/series ]; then
    for PATCH in $(cat $CWD/patches/series); do
      patch -p1 -i $CWD/patches/$PATCH
    done
  else
    for PATCH in $CWD/patches/*.patch; do
      patch -p1 -i $PATCH
    done
  fi
fi

#Determine the lapack version from its README:
LAPACK=$(grep VERSION lapack-netlib/README.md |tail -n 1 |cut -d' ' -f3)
LAPACKMAJ=${LAPACK:0:1}

mkdir -p build
cd build
cmake -Wno-dev \
  -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS -DNDEBUG" \
  -DCMAKE_BUILD_TYPE=Release \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DBUILD_RELAPACK=ON \
  -DBUILD_STATIC_LIBS=OFF \
  -DBUILD_SHARED_LIBS=ON \
  -DBUILD_TESTING=OFF \
  ..

make
make DESTDIR=$PKG install
cd ..

# Don't ship .la files:
rm -f $PKG/{,usr/}lib${LIBDIRSUFFIX}/*.la

# Install compatibility symlinks (Thanks to Alien Bob)
# For BLAS:
ln -s libopenblas.so $PKG/usr/lib$LIBDIRSUFFIX/libblas.so
ln -s libopenblas.so $PKG/usr/lib$LIBDIRSUFFIX/libblas.so.${LAPACKMAJ}
ln -s libopenblas.so $PKG/usr/lib$LIBDIRSUFFIX/libblas.so.${LAPACK}
ln -s openblas.pc $PKG/usr/lib$LIBDIRSUFFIX/pkgconfig/blas.pc
# For CBLAS:
ln -s libopenblas.so $PKG/usr/lib$LIBDIRSUFFIX/libcblas.so
ln -s libopenblas.so $PKG/usr/lib$LIBDIRSUFFIX/libcblas.so.${LAPACKMAJ}
ln -s libopenblas.so $PKG/usr/lib$LIBDIRSUFFIX/libcblas.so.${LAPACK}
ln -s openblas.pc $PKG/usr/lib$LIBDIRSUFFIX/pkgconfig/cblas.pc
# For LAPACK:
ln -s libopenblas.so $PKG/usr/lib$LIBDIRSUFFIX/liblapack.so
ln -s libopenblas.so $PKG/usr/lib$LIBDIRSUFFIX/liblapack.so.${LAPACKMAJ}
ln -s libopenblas.so $PKG/usr/lib$LIBDIRSUFFIX/liblapack.so.${LAPACK}
ln -s openblas.pc $PKG/usr/lib$LIBDIRSUFFIX/pkgconfig/lapack.pc
# For LAPACKE:
ln -s libopenblas.so $PKG/usr/lib$LIBDIRSUFFIX/liblapacke.so
ln -s libopenblas.so $PKG/usr/lib$LIBDIRSUFFIX/liblapacke.so.${LAPACKMAJ}
ln -s libopenblas.so $PKG/usr/lib$LIBDIRSUFFIX/liblapacke.so.${LAPACK}
ln -s openblas.pc $PKG/usr/lib$LIBDIRSUFFIX/pkgconfig/lapacke.pc

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
find $PKG | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip -g 2> /dev/null || true

if [ -d $PKG/usr/man ]; then
  find $PKG/usr/man -type f -exec chmod 644 {} \; -exec gzip -9 {} \;
  for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
fi

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a $DOCFILES $PKG/usr/doc/$PKGNAM-$VERSION || true
cat $CWD/$PKGNAM.SlackBuild > $PKG/usr/doc/$PKGNAM-$VERSION/$PKGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
if [ -e $CWD/slack-required ]; then
  cat $CWD/slack-required > $PKG/install/slack-required
fi

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
